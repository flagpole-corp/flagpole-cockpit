{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    "target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */, // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "preserve" /* Specify what JSX code is generated. */, // "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
    "jsxImportSource": "react" /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */, // "reactNamespace": "",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */
    /* Modules */
    "module": "ESNext" /* Specify what module code is generated. */,
    "moduleResolution": "bundler",
    "rootDir": "./" /* Specify the root folder within your source files. */, // "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */, // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    "paths": {
      "~/*": ["./src/*"]
    },
    "outDir": "build" /* Specify an output folder for all emitted files. */, // "removeComments": true,                           /* Disable emitting comments. */
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */, // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */ /* Type Checking */,
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */, // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */

    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "lib": ["dom", "dom.iterable", "esnext"],
    "noEmit": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "incremental": true,
    "ignoreDeprecations": "5.0"
  },
  "exclude": ["node_modules", "build/**/*"],
  "include": ["**/*.ts", "src/**/*", ".eslintrc.js"],
  "ignorePatterns": ["shell/*"]
}
